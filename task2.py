# -*- coding: utf-8 -*-
"""Task2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kP8bzsIdBPvqCu8QRNd65BylfdHFM_gf

## Task 2

### Defanging IP Adress
"""

class Solution:
    def defangIPaddr(self, address: str) -> str:
        res=address.replace(".","[.]")
        return res

"""### Find the numbers in Even digit"""

class Solution:
    def findNumbers(self, nums: List[int]) -> int:
        c=0
        for i in nums:
            if len(str(i))%2==0:
                c+=1
        return c

"""### Numbers of good pairs"""

class Solution:
    def numIdenticalPairs(self, nums: List[int]) -> int:
        
        f={}
        res=0
        for num in nums:
            if not num in f:
                f[num]=0
            f[num]+=1
        
        for num in f:
            n=f[num]
            res+=(n*(n-1)//2)
            
        return res

"""### How many numbers are smaller than current number"""

class Solution:
    def smallerNumbersThanCurrent(self, nums: List[int]) -> List[int]:
        l=len(nums)
        ans=[]
        count=0
        for i in nums:
            for j in range(l):
               if (nums[j]-i)<0:
                   count+=1
            ans.append(count)
            count=0
        return ans

"""###  subtract the product and sum of digits of an integer """

class Solution:
    def subtractProductAndSum(self, n: int) -> int:
        sm,pro=0,1
        while n:
            digit=n%10
            sm+=digit
            pro *=digit
            n //=10
        return pro-sm

"""### XOR array"""

class Solution:
    def xorOperation(self, n: int, start: int) -> int:
        res=0
        for i in range(n):
            res^=(start+i*2)
        
        return res