# -*- coding: utf-8 -*-
"""Task3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1GDbcTa_215lB1e0OBN8HqqH4v9o7Puov

## Task 3

### Maximum Product of Two Elements in an Array
"""

class Solution:
    def maxProduct(self, nums: List[int]) -> int:
        l=len(nums)
        nums=sorted(nums,reverse=True)
        return (nums[0]-1)*(nums[1]-1)

"""### Count Number of Teams"""

class Solution:
    def numTeams(self, rating: List[int]) -> int:
        l = len(rating)
        ct = 0
        for i in range(l):
            for j in range(i+1,l):
                for k in range(j+1,l):
                    if rating[i] < rating[j] < rating[k]:
                        ct += 1
                    elif rating[i] > rating[j] > rating[k]:
                        ct += 1
        return ct

"""### Number of Students Doing Homework at a Given Time"""

class Solution:
    def busyStudent(self, startTime: List[int], endTime: List[int], queryTime: int) -> int:
        ans=0
        m=zip(startTime, endTime)
        for s, e in m:
            if s<=queryTime<=e:
                ans+=1
        return ans

"""### Number of Steps to reduce zero"""

class Solution:
    def numberOfSteps(self, num: int) -> int:
        step=0
        while(num>0):
            if num % 2 ==0:
                num=num//2
            else:
                num-=1
            step+=1
        return step

"""### Counting Bits"""

class Solution:
    def countBits(self, n: int) -> List[int]:
        res=[0]
        for i in range(1,n+1):
            res.append(res[i & (i-1)]+1)
        return res